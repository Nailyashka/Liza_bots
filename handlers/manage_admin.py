# handlers/manage_admins.py
from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from keyboards.admin_kb import superadmin_main_keyboard
from orm_query.admin import add_admin, get_user_by_username, remove_admin, list_admins, is_superadmin
from states.admin import AddAdminFSM, RemoveAdminFSM

manage_admins_router = Router()


# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
cancel_kb = types.ReplyKeyboardMarkup(
    keyboard=[[types.KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]],
    resize_keyboard=True,
    one_time_keyboard=True
)


# --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ ---
@manage_admins_router.message(F.text == "üëë –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞")
async def start_add_admin(message: types.Message, state: FSMContext, session: AsyncSession):
    if not await is_superadmin(session, message.from_user.id):
        await message.answer("‚õî –ù–µ—Ç –ø—Ä–∞–≤.")
        return

    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ ID –∏–ª–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ @), —á—Ç–æ–±—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å –µ–≥–æ –∞–¥–º–∏–Ω–æ–º:",
        reply_markup=cancel_kb
    )
    await state.set_state(AddAdminFSM.waiting_for_user_input)


@manage_admins_router.message(AddAdminFSM.waiting_for_user_input)
async def process_add_admin(message: types.Message, state: FSMContext, session: AsyncSession):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        await state.clear()
        await message.answer("‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=superadmin_main_keyboard())
        return

    input_text = message.text.strip()


    # –ü–æ–ø—Ä–æ–±—É–µ–º –∫–∞–∫ ID
    if input_text.isdigit():
        tg_id = int(input_text)
        success = await add_admin(session, tg_id)
        if success:
            await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {tg_id} —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω.", reply_markup=superadmin_main_keyboard())
        else:
            await message.answer("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=superadmin_main_keyboard())
        await state.clear()
        return

    # –ï—Å–ª–∏ –Ω–µ —á–∏—Å–ª–æ ‚Äî –∏—â–µ–º –ø–æ username
    username = input_text.lstrip("@")
    user = await get_user_by_username(session, username)
    if not user:
        await message.answer("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º username –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=superadmin_main_keyboard())
        await state.clear()
        return

    success = await add_admin(session, user.tg_id)
    if success:
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω.", reply_markup=superadmin_main_keyboard())
    else:
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∞.", reply_markup=superadmin_main_keyboard())
    await state.clear()


# --- –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ ---
@manage_admins_router.message(F.text == "‚ùå –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞")
async def start_remove_admin(message: types.Message, state: FSMContext, session: AsyncSession):
    if not await is_superadmin(session, message.from_user.id):
        await message.answer("‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ ID –∏–ª–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ @), —á—Ç–æ–±—ã —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:",
        reply_markup=cancel_kb
    )
    await state.set_state(RemoveAdminFSM.waiting_for_user_id)


@manage_admins_router.message(RemoveAdminFSM.waiting_for_user_id)
async def process_remove_admin(message: types.Message, state: FSMContext, session: AsyncSession):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        await state.clear()
        await message.answer("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
        return

    input_text = message.text.strip()


    # –ü–æ–ø—Ä–æ–±—É–µ–º –∫–∞–∫ ID
    if input_text.isdigit():
        tg_id = int(input_text)
        success = await remove_admin(session, tg_id)
        if success:
            await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {tg_id} –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.", reply_markup=superadmin_main_keyboard())
        else:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ–Ω –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.", reply_markup=superadmin_main_keyboard())
        await state.clear()
        return

    # –ï—Å–ª–∏ –Ω–µ —á–∏—Å–ª–æ ‚Äî –∏—â–µ–º –ø–æ username
    username = input_text.lstrip("@")
    user = await get_user_by_username(session, username)
    if not user:
        await message.answer("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º username –Ω–µ –Ω–∞–π–¥–µ–Ω.", reply_markup=superadmin_main_keyboard())
        await state.clear()
        return

    success = await remove_admin(session, user.tg_id)
    if success:
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.", reply_markup=superadmin_main_keyboard())
    else:
        await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ–Ω –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.", reply_markup=superadmin_main_keyboard())
    await state.clear()


# --- –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ ---
@manage_admins_router.message(F.text == "üìã –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤")
async def list_admins_handler(message: types.Message, session: AsyncSession):
    if not await is_superadmin(session, message.from_user.id):
        await message.answer("‚õî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    admins = await list_admins(session)
    if not admins:
        await message.answer("üì≠ –ê–¥–º–∏–Ω–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.", reply_markup=superadmin_main_keyboard())
        return

    text = "üìã –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n\n"
    for admin in admins:
        text += f"üÜî {admin.tg_id} | @{admin.username or '–ë–µ–∑ –Ω–∏–∫–∞'} | {admin.full_name}\n"

    await message.answer(text, reply_markup=superadmin_main_keyboard())
